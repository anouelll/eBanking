version: '3.8'
services:
  frontend:
    image: ebanking-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ebanking-frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
    networks:
      - dev-network
  
  backend:
    image: ebanking-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ebanking-backend
    ports:
      - "8081:8080"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    networks:
      - dev-network

  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - dev-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - dev-network

  tempo:
    image: grafana/tempo
    container_name: tempo
    restart: unless-stopped
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"
      - "9411:9411"
    networks:
      - dev-network
  
  loki:
    image: grafana/loki:2.4.1
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - dev-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
      - loki
      - tempo
    networks:
      - dev-network

volumes:
  db_data:
  tempo_data:
  
networks:
  dev-network:
    driver: bridge
